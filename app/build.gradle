plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

def appProperties = new Properties()

if (rootProject.file("app-settings.properties").exists()) {
    def appPropertiesFile = rootProject.file("app-settings.properties")
    appProperties.load(new FileInputStream(appPropertiesFile))
}

android {
    namespace 'rs.smobile.chucknorrisjokes'
    compileSdk 33

    defaultConfig {
        applicationId "rs.smobile.chucknorrisjokes"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        def appCenterBuild = System.getenv("APP_CENTER_BUILD")

        if (appCenterBuild != null) {
            buildConfigField ("boolean", "APP_CENTER_BUILD", "\"${appCenterBuild}\"" ?: "false")
        }

        if (appCenterBuild) {
            buildConfigField("String", "API_KEY_HEADER_VALUE", "\"${System.getenv("API_KEY_HEADER_VALUE")}\"")
            buildConfigField("String", "APP_CENTER_API_KEY", "\"${System.getenv("APP_CENTER_API_KEY")}\"")
        } else {
            buildConfigField("String", "API_KEY_HEADER_VALUE", "\"${appProperties['api.key.header.value']}\"")
            buildConfigField("String", "APP_CENTER_API_KEY", "\"${appProperties['app.center.api.key']}\"")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.1'
    implementation 'androidx.core:core-ktx:1.9.0'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //HILT
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-android-compiler:2.44'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    //MOSHI
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    implementation 'com.squareup.moshi:moshi:1.14.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.14.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //App Center
    def appCenterSdkVersion = '4.4.5'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

kapt {
    correctErrorTypes = true
}